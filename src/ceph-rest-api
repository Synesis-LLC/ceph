#!/usr/bin/env python
# coding: utf-8

from __future__ import print_function, unicode_literals

import ConfigParser
import argparse

import gunicorn.app.base

import ceph_rest_api


class CephRestApiApplication(gunicorn.app.base.BaseApplication):

    def __init__(self, app_factory, factory_options=None, options=None):
        self.app_factory = app_factory
        self.factory_options = factory_options
        self.options = options or {}
        super(CephRestApiApplication, self).__init__()

    def load_config(self):
        config = dict([
            (key, value)
            for key, value in self.options.items()
            if key in self.cfg.settings and value is not None
        ])
        for key, value in config.items():
            self.cfg.set(key.lower(), value)

    def load(self):
        return self.app_factory(**self.factory_options)


def parse_args():
    parser = argparse.ArgumentParser(
        description="Ceph REST API webapp")
    parser.add_argument(
        '-c',
        '--conf',
        default='/etc/ceph/ceph.conf',
        help="Ceph configuration file",
    )
    parser.add_argument(
        '--cluster',
        default='ceph',
        help="Ceph cluster name",
    )
    parser.add_argument(
        '-n',
        '--name',
        help="Ceph client name",
    )
    parser.add_argument(
        '-b',
        '--bind',
        help="Server socket to bind",
    )
    parser.add_argument(
        '-w',
        '--workers',
        type=int,
        help="Number of workers",
    )

    return parser.parse_known_args()


def parse_conf(confpath, section, defaults={}):
    config = ConfigParser.ConfigParser(defaults)
    config.read(confpath)
    if section not in config.sections():
        config.add_section(section)
    return config


def main():
    parsed_args, extra_args = parse_args()

    section = 'restapi'
    defaults = {
        'clientname': 'client.restapi',
        'workers': '4',
        'bind': 'localhost:5000',
    }
    conf = parse_conf(parsed_args.conf, section, defaults)

    factory_options = {
        'conf': parsed_args.conf,
        'cluster': parsed_args.cluster,
        'clientname': parsed_args.name or conf.get(section, 'clientname'),
        'extraargs': extra_args,
    }
    options = {
        'bind': parsed_args.bind or conf.get(section, 'bind'),
        'workers': parsed_args.workers or conf.getint(section, 'workers'),
    }

    CephRestApiApplication(
        app_factory=ceph_rest_api.create_app,
        factory_options=factory_options,
        options=options,
    ).run()


if __name__ == '__main__':
    main()
